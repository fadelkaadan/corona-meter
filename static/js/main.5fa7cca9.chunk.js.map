{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","api/coronaAPI.js","utils/numberFomater.js","components/GlobalStatsDashboard/StatsBox/index.js","components/GlobalStatsDashboard/StatsBox/StatsBox.js","components/GlobalStatsDashboard/index.js","components/GlobalStatsDashboard/GlobalStatsDashboard.js","components/DataTable/DataTableRow.js","components/DataTable/Search/index.js","components/DataTable/Search/Search.js","components/DataTable/index.js","components/DataTable/DataTable.js","pages/home/index.js","pages/home/home.js","pages/notFound.js","pages/routes.js","App.js","index.js"],"names":["Header","className","BASE_URL","formatNumber","num","undefined","isNaN","toString","replace","StatsBox","counterName","count","length","GlobalStatsDashboard","useState","cases","deaths","recovered","data","setData","useEffect","axios","get","then","response","numberFormater","DataTableRow","row","rowNr","keys","Object","filter","key","map","index","style","textAlign","populateRow","Search","handleSearchChange","inputValue","onChange","e","target","value","placeholder","type","DataTable","filteredData","setFilteredData","isFetching","setIsFetching","searchInputValue","setSearchInputValue","getSortedDataBy","preference","fetchCountriesDataBy","handleSearch","searchInput","filtered","lc","country","toLowerCase","startsWith","includes","stableSetIsFetching","useCallback","stableGetSortedDataBy","onClick","element","Home","document","title","NotFound","Routes","exact","path","component","App","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.5fa7cca9.chunk.js","sourcesContent":["import Header from \"./Header\";\nexport default Header;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = () => {\n    return <div className=\"header\"></div>;\n};\n\nexport default Header;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://disease.sh/v3/covid-19\";\n\nexport const fetchGlobalData = () => {\n    return axios.get(`${BASE_URL}/all`)\n};\n\nexport const fetchCountriesDataBy = (preference) => {\n    return axios.get(`${BASE_URL}/countries/?sort=${preference}`)\n};\n","const formatNumber = (num) => {\n    if (num === undefined || num === null) return \"\";\n    else if (isNaN(num)) return num;\n\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};\n\nexport default formatNumber;\n","import StatsBox from './StatsBox';\nexport default StatsBox;","import React from \"react\";\nimport \"./StatsBox.css\";\n\nconst StatsBox = ({ counterName, count }) => {\n    return (\n        <div className=\"stats-box\">\n            <div className=\"container\">\n                <p className=\"counter-name\">{counterName}</p>\n                <h3 className=\"count\">{count.length <= 0 ? 0 : count}</h3>\n            </div>\n        </div>\n    );\n};\n\nexport default StatsBox;\n","import GlobalStatsDashboard from \"./GlobalStatsDashboard\";\nexport default GlobalStatsDashboard;\n","import React, { useEffect, useState } from \"react\";\nimport { fetchGlobalData } from \"../../api/coronaAPI\";\nimport numberFormater from \"../../utils/numberFomater\";\nimport StatsBox from \"./StatsBox\";\nimport \"./GlobalStatsDashboard.css\";\n\nconst GlobalStatsDashboard = () => {\n    const [data, setData] = useState({ cases: 0, deaths: 0, recovered: 0 });\n\n    useEffect(() => {\n        fetchGlobalData().then((response) => {\n            setData(response.data);\n        })\n    }, []);\n\n    if (!data) {\n        return null\n    }\n\n    return (\n        <div className=\"global-stats-dashboard\">\n            <StatsBox counterName=\"Total Cases\" count={numberFormater(data.cases)} />\n            <StatsBox\n                counterName=\"Total Deaths\"\n                count={numberFormater(data.deaths)}\n            />\n            <StatsBox\n                counterName=\"Total Recovered\"\n                count={numberFormater(data.recovered)}\n            />\n        </div>\n    );\n};\n\nexport default GlobalStatsDashboard;\n","import React, { Fragment } from \"react\";\nimport formatNumber from \"../../utils/numberFomater\";\n\nconst DataTableRow = ({ row, rowNr }) => {\n    const populateRow = () => {\n        const keys = Object.keys(row);\n        return (\n            <Fragment>\n                <td>{rowNr}</td>\n                {keys\n                    .filter(\n                        (key) =>\n                            key === \"country\" ||\n                            key === \"cases\" ||\n                            key === \"deaths\" ||\n                            key === \"recovered\"\n                    )\n                    .map((key, index) => {\n                        if (key === \"country\") return <td key={index} style={{textAlign: \"left\"}}>{formatNumber(row[key])}</td>;\n                        return <td key={index}>{formatNumber(row[key])}</td>;\n                    })}\n            </Fragment>\n        );\n    };\n\n    return populateRow();\n};\n\nexport default DataTableRow;\n","import Search from './Search'\nexport default Search","import React from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport \"./Search.css\";\n\nconst Search = ({ handleSearchChange, inputValue }) => {\n    const handleInputChange = (e) => {\n        handleSearchChange(e.target.value);\n    };\n\n    return (\n        <div className=\"search\">\n            <span className=\"search-icon\">\n                <FaSearch className=\"search-icon\" />\n            </span>\n            <input\n                onChange={handleInputChange}\n                value={inputValue}\n                placeholder=\"Seach by country...\"\n                className=\"search-bar\"\n                type=\"text\"\n            />\n        </div>\n    );\n};\n\nexport default Search;\n","import DataTable from \"./DataTable\";\nexport default DataTable;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport DataTableRow from \"./DataTableRow\";\nimport Search from \"./Search\";\nimport { fetchCountriesDataBy } from \"../../api/coronaAPI\";\nimport \"./DataTable.css\";\n\nconst DataTable = () => {\n    const [data, setData] = useState([]);\n    const [filteredData, setFilteredData] = useState([]);\n    const [isFetching, setIsFetching] = useState(false);\n    const [searchInputValue, setSearchInputValue] = useState(\"\");\n\n    const getSortedDataBy = (preference) => {\n        fetchCountriesDataBy(preference)\n            .then((response) => {\n                setIsFetching(false);\n                setData(response.data);\n            })\n            .then(() => {\n                setFilteredData(data);\n            });\n    };\n\n    const addRows = () => {\n        // when user types in search bar\n        if (searchInputValue !== \"\") {\n            return filteredData.map((element, index) => {\n                return (\n                    <tr key={index}>\n                        <DataTableRow row={element} />\n                    </tr>\n                );\n            });\n        }\n        // return all data\n        return data.map((element, index) => {\n            return (\n                <tr key={index}>\n                    <DataTableRow row={element} rowNr={index + 1} />\n                </tr>\n            );\n        });\n    };\n\n    const handleInputChange = (searchInputValue) => {\n        setSearchInputValue(searchInputValue);\n        handleSearch(searchInputValue);\n    };\n\n    const handleSearch = (searchInput) => {\n        if (searchInput.length > 0) {\n            const filtered = data.filter((row) => {\n                const lc = row.country.toLowerCase();\n                const filter = searchInput.toLowerCase();\n                if (searchInput.length < 2) return lc.startsWith(filter);\n                else return lc.includes(filter);\n            });\n            setFilteredData(filtered);\n        }\n    };\n\n    const stableSetIsFetching = useCallback(setIsFetching, []);\n    const stableGetSortedDataBy = useCallback(getSortedDataBy, []);\n\n    useEffect(() => {\n        stableSetIsFetching(true);\n        stableGetSortedDataBy(\"cases\");\n    }, [stableSetIsFetching, stableGetSortedDataBy]);\n\n    return (\n        <div className=\"stats\">\n            <h3 className=\"stats-title\">Countries affected by Covid-19</h3>\n            <Search\n                handleSearchChange={handleInputChange}\n                inputValue={searchInputValue}\n            />\n            <table className=\"stats-table sortable\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th\n                            onClick={() => getSortedDataBy(null)}\n                            style={{ textAlign: \"left\" }}\n                        >\n                            Country\n                        </th>\n                        <th onClick={() => getSortedDataBy(\"cases\")}>\n                            Total Cases\n                        </th>\n                        <th onClick={() => getSortedDataBy(\"deaths\")}>\n                            Total Deaths\n                        </th>\n                        <th onClick={() => getSortedDataBy(\"recovered\")}>\n                            Total Recovered\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {isFetching ? (\n                        <tr>\n                            <td>Loading</td>\n                        </tr>\n                    ) : (\n                        addRows()\n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default DataTable;\n","import Home from \"./home\";\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport Header from \"../../components/Header\";\nimport GlobalStatsDashboard from \"../../components/GlobalStatsDashboard\";\nimport DataTable from \"../../components/DataTable\";\nimport \"./Home.css\";\n\nconst Home = () => {\n    useEffect(() => {\n        document.title = \"Home\";\n    }, []);\n\n    return (\n        <div className=\"home\">\n            <Header />\n            <GlobalStatsDashboard />\n            <DataTable />\n        </div>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h1>404</h1>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./home\";\nimport NotFound from \"./notFound\";\n\nconst Routes = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/corona-meter\" component={Home} />\n\n                {/* PAGE NOT FOUND 404 */}\n                <Route path=\"*\" component={NotFound} />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport Routes from \"./pages/routes\";\nimport \"./App.css\";\n\nconst App = () => {\n    return (\n        <div className=\"app\">\n            {/* <Nav /> */}\n            <Routes />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}